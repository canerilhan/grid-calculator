{"version":3,"sources":["components/header.jsx","components/common/input.jsx","components/common/indicator.jsx","components/form.jsx","store/reducers/formReducer.js","calculations/utility/getGridConfigByUserValues.js","calculations/calculateDividers.js","calculations/changeGrid.js","store/reducers/gridConfigReducer.js","calculations/calculateGrid.js","calculations/utility/convertUserValues.js","calculations/utility/alertOnBadParameters.js","components/form-container.jsx","validation/normalizeInputValues.js","calculations/previewStyles.js","components/grid-preview.jsx","components/grid-preview-container.jsx","components/result-value.jsx","components/grid-config-panel.jsx","components/grid-config-panel-container.jsx","components/dividers-block.jsx","components/dividers-block-container.jsx","components/result-block.jsx","App.js","serviceWorker.js","store/store.js","index.js"],"names":["Header","props","className","Input","type","name","placeholder","value","onChange","onBlur","autoComplete","Indicator","onClick","divider","getStatusClass","isActive","htmlFor","toString","Form","onSubmit","onSubmitClick","isErrorVisible","errorsMessage","values","maxWidth","columns","minGutter","maxGutter","checkboxes","map","d","key","onCheckboxClick","disabled","isDisabled","initialState","maxValueErrors","notNumberErrors","isBadParameters","changeMaxWidthValue","changeColumnsValue","changeMinGutterValue","changeMaxGutterValue","switchMaxValueError","inputName","switchNotNumberError","getGridConfigByUserValues","userValues","maxW","maxContainerWidth","A","amountOfColumns","minG","minGutterWidth","maxG","maxGutterWidth","dividers","gridConfig","gridMaxW","W","result","c","calculateColumnWidth","Math","floor","checkDividedByArray","w","a","g","getGridConfigWithMaxW","gridMinG","G","getGridConfigWithMinG","getGridDividerFactor","container","column","amountOfColumn","gutter","num","array","i","length","counter","calculateDividers","columnDividers","getDividers","gutterDividers","checkDividedBy","push","createDividerObject","calculateGridWithNewContainer","delta","tempColumn","tempGutter","continueLoop","calculateColumn","Number","isInteger","calculateGutter","decreaseContainer","increaseContainer","calculateGridWithNewColumnAmount","decreaseAmount","increaseAmount","calculateGridWithNewColumnWidth","calculateContainer","decreaseColumn","increaseColumn","calculateGridWithNewGutter","decreaseGutter","increaseGutter","containerIsBiggerThanColumns","allParametersArePositive","allParametersAreLessThanMax","amount","changeContainerWidth","changeColumnAmount","changeColumnWidth","changeGutter","calculateGrid","valuesObject","margin","dividersObject","getDividersArray","dispatch","setTimeout","FormContainer","useSelector","state","form","useDispatch","e","id","preventDefault","target","allValues","isNaN","getActionOfChangingValues","checkValue","disableSubmitButton","getPreviewStyle","marginByGutter","round","columnStyle","marginRight","GridPreview","style","GridPreviewContainer","ResultValue","onDecrease","viewBox","xmlns","onIncrease","desc","GridConfigPanel","functionsOfChange","decreaseColumnsAmount","increaseColumnsAmount","decreaseColumnWidth","increaseColumnWidth","GridConfigPanelContainer","DividersBlock","DividersBlockContainer","ResultBlock","App","Boolean","window","location","hostname","match","require","combineReducers","createStore","applyMiddleware","store","action","newState","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9f4fd362.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./header.css\";\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <div className={\"header \" + props.className}>\r\n      <div className=\"container header__container\">\r\n        <h1 className=\"h1 header__title\">Grid Calculator</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./input.css\";\r\n\r\nexport default function Input(props) {\r\n  return (\r\n    <input\r\n      className={\"input \" + props.className}\r\n      type={props.type}\r\n      name={props.name}\r\n      placeholder={props.placeholder}\r\n      value={props.value}\r\n      onChange={props.onChange}\r\n      onBlur={props.onBlur}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./indicator.css\";\r\n\r\nexport default function Indicator(props) {\r\n  switch (props.type) {\r\n    case \"checkbox\":\r\n      return (\r\n        <div className={\"indicator-block \" + props.className}>\r\n          <button\r\n            onClick={props.onClick}\r\n            name={props.divider}\r\n            className={\r\n              \"indicator-block__checkbox indicator \" +\r\n              getStatusClass(props.type, props.isActive)\r\n            }\r\n          />\r\n          <label\r\n            htmlFor={\"checkbox_\" + props.divider.toString()}\r\n            className=\"indicator-block__label text\"\r\n          >\r\n            {props.divider.toString()}\r\n          </label>\r\n        </div>\r\n      );\r\n    default:\r\n      return (\r\n        <div className={\"indicator-block \" + props.className}>\r\n          <div\r\n            className={\r\n              \"indicator \" + getStatusClass(props.type, props.isActive)\r\n            }\r\n          />\r\n          <span className=\"indicator-block__label text\">\r\n            {props.divider.toString()}\r\n          </span>\r\n        </div>\r\n      );\r\n  }\r\n\r\n  function getStatusClass(type, isActive) {\r\n    switch (type) {\r\n      case \"checkbox\":\r\n        return isActive ? \"indicator-block__indicator_active\" : \"\";\r\n      default:\r\n        return isActive\r\n          ? \"indicator-block__indicator_active\"\r\n          : \"indicator-block__indicator_disabled\";\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Input from \"./common/input\";\r\nimport \"./form.css\";\r\nimport Indicator from \"./common/indicator\";\r\n\r\nexport default function Form(props) {\r\n  return (\r\n    <form onSubmit={props.onSubmitClick} className={\"form \" + props.className}>\r\n      <span\r\n        className={\r\n          props.isErrorVisible\r\n            ? \"form__error-label\"\r\n            : \"hidden\"\r\n        }\r\n      >\r\n        {props.errorsMessage}\r\n      </span>\r\n      <div className=\"form__inputs\">\r\n        <div className=\"form__input-block\">\r\n          <label className=\"text\" htmlFor=\"maxWidth\">\r\n            Max. container width, px\r\n          </label>\r\n          <Input\r\n            name=\"maxWidth\"\r\n            value={props.values.maxWidth}\r\n            onChange={props.onChange}\r\n            onBlur={props.onBlur}\r\n          />\r\n        </div>\r\n        <div className=\"form__input-block\">\r\n          <label className=\"text\" htmlFor=\"columns\">\r\n            Amount of columns\r\n          </label>\r\n          <Input\r\n            name=\"columns\"\r\n            value={props.values.columns}\r\n            onChange={props.onChange}\r\n            onBlur={props.onBlur}\r\n          />\r\n        </div>\r\n        <div className=\"form__input-block\">\r\n          <label className=\"text\" htmlFor=\"minGutter\">\r\n            Min. gutter width, px\r\n          </label>\r\n          <Input\r\n            name=\"minGutter\"\r\n            value={props.values.minGutter}\r\n            onChange={props.onChange}\r\n            onBlur={props.onBlur}\r\n          />\r\n        </div>\r\n        <div className=\"form__input-block\">\r\n          <label className=\"text\" htmlFor=\"maxGutter\">\r\n            Max. gutter width, px\r\n            <span className=\"form__label_optional\">Optional</span>\r\n          </label>\r\n          <Input\r\n            name=\"maxGutter\"\r\n            value={props.values.maxGutter}\r\n            onChange={props.onChange}\r\n            onBlur={props.onBlur}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form__checkboxes-panel\">\r\n        {props.values.checkboxes.map((d) => {\r\n          return (\r\n            <Indicator\r\n              className=\"form__checkbox-item\"\r\n              key={d.divider}\r\n              divider={d.divider}\r\n              isActive={d.value}\r\n              type=\"checkbox\"\r\n              onClick={props.onCheckboxClick}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <button className=\"form__submit\" disabled={props.isDisabled}>\r\n        Calculate\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","const initialState = {\r\n  maxWidth: 1200,\r\n  columns: 12,\r\n  minGutter: 24,\r\n  maxGutter: 0,\r\n  checkboxes: [\r\n    { divider: 2, value: false },\r\n    { divider: 3, value: false },\r\n    { divider: 4, value: false },\r\n    { divider: 5, value: false },\r\n    { divider: 6, value: false },\r\n    { divider: 7, value: false },\r\n    { divider: 8, value: false },\r\n    { divider: 9, value: false },\r\n    { divider: 10, value: false },\r\n    { divider: 11, value: false },\r\n    { divider: 12, value: false },\r\n  ],\r\n  maxValueErrors: {\r\n    maxWidth: false,\r\n    columns: false,\r\n    minGutter: false,\r\n    maxGutter: false,\r\n  },\r\n  notNumberErrors: {\r\n    maxWidth: false,\r\n    columns: false,\r\n    minGutter: false,\r\n    maxGutter: false,\r\n  },\r\n  errorsMessage: \"\",\r\n  isErrorVisible: false,\r\n  isBadParameters: false,\r\n};\r\n\r\nconst CHANGE_MAX_WIDTH_VALUE = \"CHANGE_MAX_WIDTH_VALUE\";\r\nexport function changeMaxWidthValue(value) {\r\n  return {\r\n    type: CHANGE_MAX_WIDTH_VALUE,\r\n    value,\r\n  };\r\n}\r\n\r\nconst CHANGE_COLUMNS_VALUE = \"CHANGE_COLUMNS_VALUE\";\r\nexport function changeColumnsValue(value) {\r\n  return {\r\n    type: CHANGE_COLUMNS_VALUE,\r\n    value,\r\n  };\r\n}\r\n\r\nconst CHANGE_MIN_GUTTER_VALUE = \"CHANGE_MIN_GUTTER_VALUE\";\r\nexport function changeMinGutterValue(value) {\r\n  return {\r\n    type: CHANGE_MIN_GUTTER_VALUE,\r\n    value,\r\n  };\r\n}\r\n\r\nconst CHANGE_MAX_GUTTER_VALUE = \"CHANGE_MAX_GUTTER_VALUE\";\r\nexport function changeMaxGutterValue(value) {\r\n  return {\r\n    type: CHANGE_MAX_GUTTER_VALUE,\r\n    value,\r\n  };\r\n}\r\n\r\n\r\nconst SET_MAX_VALUE_ERROR_ON_MAX_WIDTH = \"SET_MAX_VALUE_ERROR_ON_MAX_WIDTH\";\r\nconst SET_MAX_VALUE_ERROR_ON_COLUMNS = \"SET_MAX_VALUE_ERROR_ON_COLUMNS\";\r\nconst SET_MAX_VALUE_ERROR_ON_MIN_GUTTER = \"SET_MAX_VALUE_ERROR_ON_MIN_GUTTER\";\r\nconst SET_MAX_VALUE_ERROR_ON_MAX_GUTTER = \"SET_MAX_VALUE_ERROR_ON_MAX_GUTTER\";\r\nexport function switchMaxValueError(inputName) {\r\n  switch (inputName) {\r\n    case \"maxWidth\":\r\n      return {\r\n        type: SET_MAX_VALUE_ERROR_ON_MAX_WIDTH,\r\n      };\r\n    case \"columns\":\r\n      return {\r\n        type: SET_MAX_VALUE_ERROR_ON_COLUMNS,\r\n      };\r\n    case \"minGutter\":\r\n      return {\r\n        type: SET_MAX_VALUE_ERROR_ON_MIN_GUTTER,\r\n      };\r\n    case \"maxGutter\":\r\n      return {\r\n        type: SET_MAX_VALUE_ERROR_ON_MAX_GUTTER,\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nconst SET_NOT_A_NUMBER_ERROR_ON_MAX_WIDTH =\r\n  \"SET_NOT_A_NUMBER_ERROR_ON_MAX_WIDTH\";\r\nconst SET_NOT_A_NUMBER_ERROR_ON_COLUMNS = \"SET_NOT_A_NUMBER_ERROR_ON_COLUMNS\";\r\nconst SET_NOT_A_NUMBER_ERROR_ON_MIN_GUTTER =\r\n  \"SET_NOT_A_NUMBER_ERROR_ON_MIN_GUTTER\";\r\nconst SET_NOT_A_NUMBER_ERROR_ON_MAX_GUTTER =\r\n  \"SET_NOT_A_NUMBER_ERROR_ON_MAX_GUTTER\";\r\nexport function switchNotNumberError(inputName) {\r\n  switch (inputName) {\r\n    case \"maxWidth\":\r\n      return {\r\n        type: SET_NOT_A_NUMBER_ERROR_ON_MAX_WIDTH,\r\n      };\r\n    case \"columns\":\r\n      return {\r\n        type: SET_NOT_A_NUMBER_ERROR_ON_COLUMNS,\r\n      };\r\n    case \"minGutter\":\r\n      return {\r\n        type: SET_NOT_A_NUMBER_ERROR_ON_MIN_GUTTER,\r\n      };\r\n    case \"maxGutter\":\r\n      return {\r\n        type: SET_NOT_A_NUMBER_ERROR_ON_MAX_GUTTER,\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nconst CHECK_INDICATOR = \"CHECK_INDICATOR\";\r\nexport function checkIndicator(id) {\r\n  return {\r\n    type: CHECK_INDICATOR,\r\n    id: Number(id),\r\n  };\r\n}\r\n\r\nconst ERROR_BAD_PARAMETERS = \"ERROR_BAD_PARAMETERS\";\r\nexport function errorBadParameters() {\r\n  return {\r\n    type: ERROR_BAD_PARAMETERS,\r\n  };\r\n}\r\n\r\nconst SHOW_ERROR = \"SHOW_ERROR\";\r\nexport function showError() {\r\n  return {\r\n    type: SHOW_ERROR,\r\n  };\r\n}\r\n\r\nconst HIDE_ERROR = \"HIDE_ERROR\";\r\nexport function hideError() {\r\n  return {\r\n    type: HIDE_ERROR,\r\n  };\r\n}\r\n\r\nexport default function FormReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHANGE_MAX_WIDTH_VALUE:\r\n      return { ...state, maxWidth: action.value };\r\n    case CHANGE_COLUMNS_VALUE:\r\n      return { ...state, columns: action.value };\r\n    case CHANGE_MIN_GUTTER_VALUE:\r\n      return { ...state, minGutter: action.value };\r\n    case CHANGE_MAX_GUTTER_VALUE:\r\n      return { ...state, maxGutter: action.value };\r\n    case SET_MAX_VALUE_ERROR_ON_MAX_WIDTH:\r\n      return {\r\n        ...state,\r\n        maxValueErrors: {\r\n          ...state.maxValueErrors,\r\n          maxWidth: !state.maxValueErrors.maxWidth,\r\n        },\r\n        errorsMessage: state.maxValueErrors.maxWidth\r\n          ? \"\"\r\n          : \"Max. width is 5000 px\",\r\n      };\r\n    case SET_MAX_VALUE_ERROR_ON_COLUMNS:\r\n      return {\r\n        ...state,\r\n        maxValueErrors: {\r\n          ...state.maxValueErrors,\r\n          columns: !state.maxValueErrors.columns,\r\n        },\r\n        errorsMessage: state.maxValueErrors.columns\r\n          ? \"\"\r\n          : \"Max. amount of columns is 24\",\r\n      };\r\n    case SET_MAX_VALUE_ERROR_ON_MIN_GUTTER:\r\n      return {\r\n        ...state,\r\n        maxValueErrors: {\r\n          ...state.maxValueErrors,\r\n          minGutter: !state.maxValueErrors.minGutter,\r\n        },\r\n        errorsMessage: state.maxValueErrors.minGutter\r\n          ? \"\"\r\n          : \"Gutter can't be wider than container\",\r\n      };\r\n    case SET_MAX_VALUE_ERROR_ON_MAX_GUTTER:\r\n      return {\r\n        ...state,\r\n        maxValueErrors: {\r\n          ...state.maxValueErrors,\r\n          maxGutter: !state.maxValueErrors.maxGutter,\r\n        },\r\n        errorsMessage: state.maxValueErrors.maxGutter\r\n          ? \"\"\r\n          : \"Gutter can't be wider than container\",\r\n      };\r\n    case SET_NOT_A_NUMBER_ERROR_ON_MAX_WIDTH:\r\n      return {\r\n        ...state,\r\n        maxValueErrors: {\r\n          ...state.notNumberErrors,\r\n          maxWidth: !state.notNumberErrors.maxWidth,\r\n        },\r\n        errorsMessage: state.notNumberErrors.maxWidth ? \"\" : \"Only numbers\",\r\n      };\r\n    case SET_NOT_A_NUMBER_ERROR_ON_COLUMNS:\r\n      return {\r\n        ...state,\r\n        maxValueErrors: {\r\n          ...state.notNumberErrors,\r\n          columns: !state.notNumberErrors.columns,\r\n        },\r\n        errorsMessage: state.notNumberErrors.columns ? \"\" : \"Only numbers\",\r\n      };\r\n    case SET_NOT_A_NUMBER_ERROR_ON_MIN_GUTTER:\r\n      return {\r\n        ...state,\r\n        maxValueErrors: {\r\n          ...state.notNumberErrors,\r\n          minGutter: !state.notNumberErrors.minGutter,\r\n        },\r\n        errorsMessage: state.notNumberErrors.minGutter ? \"\" : \"Only numbers\",\r\n      };\r\n    case SET_NOT_A_NUMBER_ERROR_ON_MAX_GUTTER:\r\n      return {\r\n        ...state,\r\n        maxValueErrors: {\r\n          ...state.notNumberErrors,\r\n          maxGutter: !state.notNumberErrors.maxGutter,\r\n        },\r\n        errorsMessage: state.notNumberErrors.maxGutter ? \"\" : \"Only numbers\",\r\n      };\r\n    case CHECK_INDICATOR:\r\n      return {\r\n        ...state,\r\n        checkboxes: state.checkboxes.map((c) => {\r\n          if (c.divider === action.id) {\r\n            return {\r\n              divider: action.id,\r\n              value: !c.value,\r\n            };\r\n          } else return c;\r\n        }),\r\n      };\r\n    case ERROR_BAD_PARAMETERS:\r\n      return {\r\n        ...state,\r\n        errorsMessage: state.isBadParameters\r\n          ? \"\"\r\n          : \"Please, choose other parameters\",\r\n        isBadParameters: !state.isBadParameters,\r\n      };\r\n    case SHOW_ERROR:\r\n      return { ...state, isErrorVisible: true };\r\n    case HIDE_ERROR:\r\n      return { ...state, isErrorVisible: false };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export default function getGridConfigByUserValues(userValues) {\r\n  let maxW = userValues.maxContainerWidth,\r\n    A = userValues.amountOfColumns,\r\n    minG = userValues.minGutterWidth,\r\n    maxG = userValues.maxGutterWidth,\r\n    d = userValues.dividers,\r\n    gridConfig = {};\r\n\r\n  if (maxG === 0) {\r\n    maxG = maxW / A;\r\n  }\r\n\r\n  let gridMaxW = getGridConfigWithMaxW(maxW, A, minG, maxG, d),\r\n    gridMinG = getGridConfigWithMinG(maxW, A, minG, maxG, d);\r\n\r\n  if (gridMaxW !== false && gridMinG !== false) {\r\n    if (getGridDividerFactor(gridMaxW) >= getGridDividerFactor(gridMinG)) {\r\n      gridConfig.container = gridMaxW.w;\r\n      gridConfig.column = gridMaxW.c;\r\n      gridConfig.amountOfColumn = gridMaxW.a;\r\n      gridConfig.gutter = gridMaxW.g;\r\n    } else {\r\n      gridConfig.container = gridMinG.w;\r\n      gridConfig.column = gridMinG.c;\r\n      gridConfig.amountOfColumn = gridMinG.a;\r\n      gridConfig.gutter = gridMinG.g;\r\n    }\r\n  } else if (gridMaxW === false && gridMinG === false) {\r\n    return false;\r\n  } else if (gridMaxW !== false) {\r\n    gridConfig.container = gridMaxW.w;\r\n    gridConfig.column = gridMaxW.c;\r\n    gridConfig.amountOfColumn = gridMaxW.a;\r\n    gridConfig.gutter = gridMaxW.g;\r\n  } else {\r\n    gridConfig.container = gridMinG.w;\r\n    gridConfig.column = gridMinG.c;\r\n    gridConfig.amountOfColumn = gridMinG.a;\r\n    gridConfig.gutter = gridMinG.g;\r\n  }\r\n\r\n  return gridConfig;\r\n\r\n  function calculateColumnWidth(w, a, g) {\r\n    return (w - a * g + g) / a;\r\n  }\r\n\r\n  function getGridConfigWithMaxW(maxW, A, minG, maxG, d) {\r\n    let W = maxW,\r\n      result = {},\r\n      c = calculateColumnWidth(W, A, minG);\r\n\r\n    while (\r\n      Math.floor(calculateColumnWidth(W, A, minG)) !==\r\n        calculateColumnWidth(W, A, minG) ||\r\n      checkDividedByArray(c, d) !== true\r\n    ) {\r\n      minG++;\r\n      c = calculateColumnWidth(W, A, minG);\r\n      checkDividedByArray(c, d);\r\n\r\n      if (minG === maxG) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (minG === maxG) {\r\n      return false;\r\n    } else {\r\n      result.w = W;\r\n      result.a = A;\r\n      result.g = minG;\r\n      result.c = c;\r\n      result.d = d;\r\n      return result;\r\n    }\r\n  }\r\n\r\n  function getGridConfigWithMinG(maxW, A, minG, maxG, d) {\r\n    let G = minG,\r\n      W = maxW,\r\n      result = {},\r\n      c = calculateColumnWidth(W, A, G);\r\n\r\n    while (\r\n      Math.floor(calculateColumnWidth(W, A, G)) !==\r\n        calculateColumnWidth(W, A, G) ||\r\n      checkDividedByArray(c, d) === false\r\n    ) {\r\n      W--;\r\n      c = calculateColumnWidth(W, A, minG);\r\n      checkDividedByArray(c, d);\r\n\r\n      if (W === G) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (W === G) {\r\n      return false;\r\n    } else {\r\n      result.w = W;\r\n      result.a = A;\r\n      result.g = minG;\r\n      result.c = calculateColumnWidth(W, A, minG);\r\n      result.d = d;\r\n      return result;\r\n    }\r\n  }\r\n\r\n  function checkDividedByArray(num, array) {\r\n    let result = true;\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (num % array[i] !== 0) {\r\n        result = false;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  function getGridDividerFactor(gridConfig) {\r\n    let c = gridConfig.c,\r\n      g = gridConfig.g,\r\n      counter = 0;\r\n\r\n    for (let i = 2; i <= 12; i++) {\r\n      if (c % i === 0 && g % i === 0) {\r\n        counter++;\r\n      }\r\n    }\r\n\r\n    return counter;\r\n  }\r\n}\r\n","export default function calculateDividers(gridConfig) {\r\n  return {\r\n    columnDividers: getDividers(gridConfig.column),\r\n    gutterDividers: getDividers(gridConfig.gutter),\r\n  };\r\n\r\n  function getDividers(num) {\r\n    let result = [];\r\n\r\n    for (let i = 2; i <= 12; i++) {\r\n      if (checkDividedBy(num, i)) {\r\n        result.push(createDividerObject(i, true));\r\n      } else {\r\n        result.push(createDividerObject(i, false));\r\n      }\r\n    }\r\n\r\n    return result;\r\n\r\n    function checkDividedBy(num, divider) {\r\n      if (num % divider === 0) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    function createDividerObject(divider, value) {\r\n      return {\r\n        divider,\r\n        value,\r\n      };\r\n    }\r\n  }\r\n}\r\n","export function calculateGridWithNewContainer(delta, gridConfig) {\r\n  if (delta < 0) {\r\n    return decreaseContainer(gridConfig);\r\n  } else if (delta > 0) {\r\n    return increaseContainer(gridConfig);\r\n  }\r\n\r\n  function decreaseContainer(gridConfig) {\r\n    let result = { ...gridConfig },\r\n      tempColumn = 0,\r\n      tempGutter = 0;\r\n\r\n    while (continueLoop(result)) {\r\n      result.container--;\r\n\r\n      tempColumn = calculateColumn(\r\n        result.container,\r\n        result.gutter,\r\n        result.amountOfColumn\r\n      );\r\n\r\n      if (Number.isInteger(tempColumn)) {\r\n        return { ...result, column: tempColumn };\r\n      }\r\n\r\n      tempGutter = calculateGutter(\r\n        result.container,\r\n        result.column,\r\n        result.amountOfColumn\r\n      );\r\n\r\n      if (Number.isInteger(tempGutter)) {\r\n        return { ...result, gutter: tempGutter };\r\n      }\r\n    }\r\n\r\n    return gridConfig;\r\n  }\r\n\r\n  function increaseContainer(gridConfig) {\r\n    let result = { ...gridConfig },\r\n      tempColumn = 0,\r\n      tempGutter = 0;\r\n\r\n    while (continueLoop(result)) {\r\n      result.container++;\r\n\r\n      tempColumn = calculateColumn(\r\n        result.container,\r\n        result.gutter,\r\n        result.amountOfColumn\r\n      );\r\n\r\n      if (Number.isInteger(tempColumn)) {\r\n        return { ...result, column: tempColumn };\r\n      }\r\n\r\n      tempGutter = calculateGutter(\r\n        result.container,\r\n        result.column,\r\n        result.amountOfColumn\r\n      );\r\n\r\n      if (Number.isInteger(tempGutter)) {\r\n        return { ...result, gutter: tempGutter };\r\n      }\r\n    }\r\n\r\n    return gridConfig;\r\n  }\r\n}\r\n\r\nexport function calculateGridWithNewColumnAmount(delta, gridConfig) {\r\n  if (delta < 0) {\r\n    return decreaseAmount(gridConfig);\r\n  } else if (delta > 0) {\r\n    return increaseAmount(gridConfig);\r\n  }\r\n\r\n  function decreaseAmount(gridConfig) {\r\n    let result = { ...gridConfig },\r\n      tempColumn = 0,\r\n      tempGutter = 0;\r\n\r\n    while (continueLoop(result)) {\r\n      result.amountOfColumn--;\r\n      while (continueLoop(result)) {\r\n        tempColumn = calculateColumn(\r\n          result.container,\r\n          result.gutter,\r\n          result.amountOfColumn\r\n        );\r\n\r\n        if (Number.isInteger(tempColumn)) {\r\n          return { ...result, column: tempColumn };\r\n        }\r\n\r\n        tempGutter = calculateGutter(\r\n          result.container,\r\n          result.column,\r\n          result.amountOfColumn\r\n        );\r\n\r\n        if (Number.isInteger(tempGutter)) {\r\n          return { ...result, gutter: tempGutter };\r\n        }\r\n\r\n        result.container--;\r\n      }\r\n    }\r\n\r\n    return gridConfig;\r\n  }\r\n\r\n  function increaseAmount(gridConfig) {\r\n    let result = { ...gridConfig },\r\n      tempColumn = 0,\r\n      tempGutter = 0;\r\n\r\n    while (continueLoop(result)) {\r\n      result.amountOfColumn++;\r\n      while (continueLoop(result)) {\r\n        tempColumn = calculateColumn(\r\n          result.container,\r\n          result.gutter,\r\n          result.amountOfColumn\r\n        );\r\n\r\n        if (Number.isInteger(tempColumn)) {\r\n          return { ...result, column: tempColumn };\r\n        }\r\n\r\n        tempGutter = calculateGutter(\r\n          result.container,\r\n          result.column,\r\n          result.amountOfColumn\r\n        );\r\n\r\n        if (Number.isInteger(tempGutter)) {\r\n          return { ...result, gutter: tempGutter };\r\n        }\r\n\r\n        result.container++;\r\n      }\r\n    }\r\n\r\n    return gridConfig;\r\n  }\r\n}\r\n\r\nexport function calculateGridWithNewColumnWidth(delta, gridConfig) {\r\n  if (delta < 0) {\r\n    return decreaseColumn(gridConfig);\r\n  } else if (delta > 0) {\r\n    return increaseColumn(gridConfig);\r\n  }\r\n\r\n  function decreaseColumn(gridConfig) {\r\n    let result = { ...gridConfig };\r\n\r\n    result.column = gridConfig.column - 1;\r\n\r\n    result.container = calculateContainer(\r\n      result.column,\r\n      result.gutter,\r\n      result.amountOfColumn\r\n    );\r\n\r\n    return result;\r\n  }\r\n\r\n  function increaseColumn(gridConfig) {\r\n    let result = { ...gridConfig };\r\n\r\n    result.column = gridConfig.column + 1;\r\n\r\n    result.container = calculateContainer(\r\n      result.column,\r\n      result.gutter,\r\n      result.amountOfColumn\r\n    );\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\nexport function calculateGridWithNewGutter(delta, gridConfig) {\r\n  if (delta < 0) {\r\n    return decreaseGutter(gridConfig);\r\n  } else if (delta > 0) {\r\n    return increaseGutter(gridConfig);\r\n  }\r\n\r\n  function decreaseGutter(gridConfig) {\r\n    let result = { ...gridConfig };\r\n\r\n    result.gutter = gridConfig.gutter - 1;\r\n\r\n    result.container = calculateContainer(\r\n      result.column,\r\n      result.gutter,\r\n      result.amountOfColumn\r\n    );\r\n\r\n    return result;\r\n  }\r\n\r\n  function increaseGutter(gridConfig) {\r\n    let result = { ...gridConfig };\r\n\r\n    result.gutter = gridConfig.gutter + 1;\r\n\r\n    result.container = calculateContainer(\r\n      result.column,\r\n      result.gutter,\r\n      result.amountOfColumn\r\n    );\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\nfunction continueLoop(gridConfig) {\r\n  return containerIsBiggerThanColumns(gridConfig) &&\r\n    allParametersArePositive(gridConfig) &&\r\n    allParametersAreLessThanMax(gridConfig)\r\n    ? true\r\n    : false;\r\n\r\n  function containerIsBiggerThanColumns(gridConfig) {\r\n    if (gridConfig.container > gridConfig.column * gridConfig.amountOfColumn) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function allParametersArePositive(gridConfig) {\r\n    if (\r\n      gridConfig.container > 0 &&\r\n      gridConfig.gutter > 0 &&\r\n      gridConfig.column > 0 &&\r\n      gridConfig.amountOfColumn > 0\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function allParametersAreLessThanMax(gridConfig) {\r\n    if (\r\n      gridConfig.container < 5000 &&\r\n      gridConfig.gutter < gridConfig.column &&\r\n      gridConfig.column < gridConfig.container / gridConfig.amountOfColumn &&\r\n      gridConfig.amountOfColumn < 24\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nfunction calculateColumn(container, gutter, amount) {\r\n  return (container - gutter * (amount + 1)) / amount;\r\n}\r\n\r\nfunction calculateGutter(container, column, amount) {\r\n  return (container - column * amount) / (amount - 1);\r\n}\r\n\r\nfunction calculateContainer(column, gutter, amount) {\r\n  return amount * column + amount * gutter - gutter;\r\n}\r\n","import calculateDividers from \"../../calculations/calculateDividers\";\r\nimport {\r\n  calculateGridWithNewContainer,\r\n  calculateGridWithNewColumnAmount,\r\n  calculateGridWithNewColumnWidth,\r\n  calculateGridWithNewGutter,\r\n} from \"../../calculations/changeGrid\";\r\n\r\nlet initialState = {\r\n  container: 1200,\r\n  gutter: 24,\r\n  column: 78,\r\n  amountOfColumn: 12,\r\n  columnDividers: [\r\n    { divider: 2, value: true },\r\n    { divider: 3, value: true },\r\n    { divider: 4, value: false },\r\n    { divider: 5, value: false },\r\n    { divider: 6, value: true },\r\n    { divider: 7, value: false },\r\n    { divider: 8, value: false },\r\n    { divider: 9, value: false },\r\n    { divider: 10, value: false },\r\n    { divider: 11, value: false },\r\n    { divider: 12, value: false },\r\n  ],\r\n  gutterDividers: [\r\n    { divider: 2, value: true },\r\n    { divider: 3, value: true },\r\n    { divider: 4, value: true },\r\n    { divider: 5, value: false },\r\n    { divider: 6, value: true },\r\n    { divider: 7, value: false },\r\n    { divider: 8, value: true },\r\n    { divider: 9, value: false },\r\n    { divider: 10, value: false },\r\n    { divider: 11, value: false },\r\n    { divider: 12, value: true },\r\n  ],\r\n};\r\n\r\nconst SET_NEW_GRID_CONFIG = \"SET_NEW_GRID_CONFIG\";\r\nexport function setNewGridConfig(gridConfig) {\r\n  return { type: SET_NEW_GRID_CONFIG, gridConfig };\r\n}\r\n\r\nconst CHANGE_CONTAINER_WIDTH = \"CHANGE_CONTAINER_WIDTH\";\r\nexport function changeContainerWidth(delta) {\r\n  return {\r\n    type: CHANGE_CONTAINER_WIDTH,\r\n    delta,\r\n  };\r\n}\r\n\r\nconst CHANGE_COLUMNS_AMOUNT = \"CHANGE_COLUMNS_AMOUNT\";\r\nexport function changeColumnAmount(delta) {\r\n  return {\r\n    type: CHANGE_COLUMNS_AMOUNT,\r\n    delta,\r\n  };\r\n}\r\n\r\nconst CHANGE_COLUMN_WIDTH = \"CHANGE_COLUMN_WIDTH\";\r\nexport function changeColumnWidth(delta) {\r\n  return {\r\n    type: CHANGE_COLUMN_WIDTH,\r\n    delta,\r\n  };\r\n}\r\n\r\nconst CHANGE_GUTTER_WIDTH = \"CHANGE_GUTTER_WIDTH\";\r\nexport function changeGutter(delta) {\r\n  return {\r\n    type: CHANGE_GUTTER_WIDTH,\r\n    delta,\r\n  };\r\n}\r\n\r\nexport default function gridConfigReducer(state = initialState, action) {\r\n  let newState = {};\r\n\r\n  switch (action.type) {\r\n    case SET_NEW_GRID_CONFIG:\r\n      return {\r\n        ...action.gridConfig,\r\n        columnDividers: calculateDividers(action.gridConfig).columnDividers,\r\n        gutterDividers: calculateDividers(action.gridConfig).gutterDividers,\r\n      };\r\n    case CHANGE_CONTAINER_WIDTH:\r\n      newState = calculateGridWithNewContainer(action.delta, state);\r\n\r\n      return {\r\n        ...newState,\r\n        columnDividers: calculateDividers(newState).columnDividers,\r\n        gutterDividers: calculateDividers(newState).gutterDividers,\r\n      };\r\n    case CHANGE_COLUMNS_AMOUNT:\r\n      newState = calculateGridWithNewColumnAmount(action.delta, state);\r\n\r\n      return {\r\n        ...newState,\r\n        columnDividers: calculateDividers(newState).columnDividers,\r\n        gutterDividers: calculateDividers(newState).gutterDividers,\r\n      };\r\n    case CHANGE_COLUMN_WIDTH:\r\n      newState = calculateGridWithNewColumnWidth(action.delta, state);\r\n\r\n      return {\r\n        ...newState,\r\n        columnDividers: calculateDividers(newState).columnDividers,\r\n        gutterDividers: calculateDividers(newState).gutterDividers,\r\n      };\r\n    case CHANGE_GUTTER_WIDTH:\r\n      newState = calculateGridWithNewGutter(action.delta, state);\r\n\r\n      return {\r\n        ...newState,\r\n        columnDividers: calculateDividers(newState).columnDividers,\r\n        gutterDividers: calculateDividers(newState).gutterDividers,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import convertUserValues from \"./utility/convertUserValues\";\r\nimport getGridConfigByUserValues from \"./utility/getGridConfigByUserValues\";\r\nimport alertOnBadParameters from \"./utility/alertOnBadParameters\";\r\nimport { setNewGridConfig } from \"../store/reducers/gridConfigReducer\";\r\n\r\nexport default function calculateGrid(values) {\r\n  const userValues = convertUserValues(values);\r\n\r\n    if (!getGridConfigByUserValues(userValues)) {\r\n      return (dispatch) => dispatch(alertOnBadParameters());\r\n    } else {\r\n      return (dispatch) => {\r\n        dispatch(setNewGridConfig(getGridConfigByUserValues(userValues)));\r\n      };\r\n    }\r\n}\r\n","export default function convertUserValues(valuesObject) {\r\n  return {\r\n    maxContainerWidth: Number(valuesObject.maxWidth),\r\n    amountOfColumns: Number(valuesObject.columns),\r\n    minGutterWidth: Number(valuesObject.minGutter),\r\n    maxGutterWidth: Number(valuesObject.maxGutter),\r\n    margin: Number(valuesObject.margin),\r\n    dividers: getDividersArray(valuesObject.checkboxes),\r\n  };\r\n\r\n  function getDividersArray(dividersObject) {\r\n    let result = [];\r\n\r\n    for (let d of dividersObject) {\r\n      if (d.value) {\r\n        result.push(d.divider);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","import {\r\n  errorBadParameters,\r\n  showError,\r\n  hideError,\r\n} from \"../../store/reducers/formReducer\";\r\n\r\nexport default function alertOnBadParameters() {\r\n  return (dispatch) => {\r\n    dispatch(errorBadParameters());\r\n    dispatch(showError());\r\n    setTimeout(dispatch, 5000, hideError());\r\n    setTimeout(dispatch, 5200, errorBadParameters());\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport Form from \"./form\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport getActionOfChangingValues from \"../validation/normalizeInputValues\";\r\nimport { checkIndicator } from \"../store/reducers/formReducer\";\r\nimport calculateGrid from \"../calculations/calculateGrid\";\r\n\r\nexport default function FormContainer(props) {\r\n  const values = useSelector((state) => state.form);\r\n  const isErrorVisible = useSelector((state) => state.form.isErrorVisible);\r\n  const dispatch = useDispatch();\r\n\r\n  function onCheckboxClick(e) {\r\n    e.preventDefault();\r\n    dispatch(checkIndicator(e.target.name));\r\n  }\r\n\r\n  function onChange(e) {\r\n    dispatch(getActionOfChangingValues(e.target.name, e.target.value, values));\r\n  }\r\n\r\n  function onSubmitClick(e) {\r\n    e.preventDefault();\r\n    dispatch(calculateGrid(values));\r\n  }\r\n\r\n  function disableSubmitButton(values) {\r\n    if (\r\n      !checkValue(values.maxWidth) ||\r\n      !checkValue(values.columns) ||\r\n      !checkValue(values.minGutter)\r\n    ) {\r\n      return true;\r\n    } else return false;\r\n\r\n    function checkValue(value) {\r\n      if (!value) return false;\r\n\r\n      if (Number(value) === 0) return false;\r\n\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      className={props.className}\r\n      values={values}\r\n      onCheckboxClick={onCheckboxClick}\r\n      onSubmitClick={onSubmitClick}\r\n      onChange={onChange}\r\n      errorsMessage={values.errorsMessage}\r\n      isErrorVisible={isErrorVisible}\r\n      isDisabled={disableSubmitButton(values)}\r\n    />\r\n  );\r\n}\r\n","import {\r\n  changeMaxWidthValue,\r\n  changeColumnsValue,\r\n  changeMinGutterValue,\r\n  changeMaxGutterValue,\r\n  switchMaxValueError,\r\n  switchNotNumberError,\r\n  showError,\r\n  hideError,\r\n} from \"../store/reducers/formReducer\";\r\n\r\nexport default function getActionOfChangingValues(name, value, allValues) {\r\n  if (isNaN(value)) {\r\n    return (dispatch) => {\r\n      dispatch(switchNotNumberError(name));\r\n      dispatch(showError());\r\n      setTimeout(dispatch, 2200, switchMaxValueError(name));\r\n      setTimeout(dispatch, 2000, switchNotNumberError(name));\r\n    };\r\n  }\r\n\r\n  switch (name) {\r\n    case \"maxWidth\":\r\n      if (Number(value) >= 5000) {\r\n        return (dispatch) => {\r\n          dispatch(changeMaxWidthValue(5000));\r\n          dispatch(switchMaxValueError(name));\r\n          dispatch(showError());\r\n          setTimeout(dispatch, 2200, switchMaxValueError(name));\r\n          setTimeout(dispatch, 2000, hideError());\r\n        };\r\n      }\r\n\r\n      return (dispatch) => {\r\n        dispatch(hideError());\r\n        dispatch(changeMaxWidthValue(value));\r\n      };\r\n    case \"columns\":\r\n      if (Number(value) >= 24) {\r\n        return (dispatch) => {\r\n          dispatch(changeColumnsValue(24));\r\n          dispatch(switchMaxValueError(name));\r\n          dispatch(showError());\r\n          setTimeout(dispatch, 2200, switchMaxValueError(name));\r\n          setTimeout(dispatch, 2000, switchMaxValueError(name));\r\n        };\r\n      }\r\n\r\n      return (dispatch) => {\r\n        dispatch(hideError());\r\n        dispatch(changeColumnsValue(value));\r\n      };\r\n    case \"minGutter\":\r\n      if (Number(value) > allValues.maxWidth) {\r\n        return (dispatch) => {\r\n          dispatch(changeMinGutterValue(0));\r\n          dispatch(switchMaxValueError(name));\r\n          dispatch(showError());\r\n          setTimeout(dispatch, 2200, switchMaxValueError(name));\r\n          setTimeout(dispatch, 2000, switchMaxValueError(name));\r\n        };\r\n      }\r\n\r\n      return (dispatch) => {\r\n        dispatch(hideError());\r\n        dispatch(changeMinGutterValue(value));\r\n      };\r\n    case \"maxGutter\":\r\n      if (Number(value) > allValues.maxWidth) {\r\n        return (dispatch) => {\r\n          dispatch(changeMaxGutterValue(allValues.maxWidth));\r\n          dispatch(switchMaxValueError(name));\r\n          dispatch(showError());\r\n          setTimeout(dispatch, 2200, switchMaxValueError(name));\r\n          setTimeout(dispatch, 2000, switchMaxValueError(name));\r\n        };\r\n      }\r\n\r\n      return (dispatch) => {\r\n        dispatch(hideError());\r\n        dispatch(changeMaxGutterValue(value));\r\n      };\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\n","export default function getPreviewStyle(gridConfig) {\r\n  let marginByGutter = Math.round(\r\n      (gridConfig.gutter / gridConfig.container) * 100\r\n    ),\r\n    columnStyle = {\r\n      marginRight: `${marginByGutter}%`,\r\n    };\r\n\r\n  return { columnStyle };\r\n}\r\n","import React from \"react\";\r\nimport \"./grid-preview.css\";\r\nimport getPreviewStyle from \"../calculations/previewStyles\";\r\n\r\nexport default function GridPreview(props) {\r\n  let columns = [];\r\n\r\n  if (props.gridConfig.amountOfColumn !== 0) {\r\n    for (let i = 0; i < props.gridConfig.amountOfColumn; i++) {\r\n      columns.push(\r\n        <div\r\n          key={i}\r\n          className={\"grid-preview__column\"}\r\n          style={\r\n            i === props.gridConfig.amountOfColumn - 1\r\n              ? null\r\n              : getPreviewStyle(props.gridConfig).columnStyle\r\n          }\r\n        ></div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return <div className={\"grid-preview \" + props.className}>{columns}</div>;\r\n}\r\n","import React from \"react\";\r\nimport GridPreview from \"./grid-preview\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function GridPreviewContainer(props) {\r\n  const gridConfig = useSelector((state) => state.gridConfig);\r\n\r\n  return <GridPreview {...props} gridConfig={gridConfig} />;\r\n}\r\n","import React from \"react\";\r\nimport \"./result-value.css\";\r\n\r\nexport default function ResultValue(props) {\r\n  return (\r\n    <div className={\"result-value \" + props.className}>\r\n      <div className=\"result-value__buttons-block\">\r\n        <button\r\n          className=\"result-value__button result-value__button_reduce\"\r\n          onClick={props.onDecrease || null}\r\n        >\r\n          <svg\r\n            className=\"result-value__button-icon result-value__button-icon_reduce\"\r\n            id=\"Capa_1\"\r\n            viewBox=\"0 0 551.13 551.13\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path d=\"m275.565 361.679-223.897-223.896h-51.668l275.565 275.565 275.565-275.565h-51.668z\" />\r\n          </svg>\r\n        </button>\r\n        <button\r\n          className=\"result-value__button result-value__button_increase\"\r\n          onClick={props.onIncrease || null}\r\n        >\r\n          <svg\r\n            className=\"result-value__button-icon result-value__button-icon_increase\"\r\n            id=\"Capa_1\"\r\n            viewBox=\"0 0 551.13 551.13\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path d=\"m275.565 361.679-223.897-223.896h-51.668l275.565 275.565 275.565-275.565h-51.668z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      <h2 className=\"result-value__value h2\">{props.value}</h2>\r\n      <p className=\"result-block__desc text\">{props.desc}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ResultValue from \"./result-value\";\r\nimport \"./grid-config-panel.css\";\r\n\r\nexport default function GridConfigPanel(props) {\r\n  return (\r\n    <div className=\"grid-config-panel\">\r\n      <ResultValue\r\n        onDecrease={props.functionsOfChange.decreaseContainer}\r\n        onIncrease={props.functionsOfChange.increaseContainer}\r\n        value={props.gridConfig.container}\r\n        desc=\"container, px\"\r\n        className=\"grid-config-panel__result-value\"\r\n      />\r\n      <ResultValue\r\n        onDecrease={props.functionsOfChange.decreaseColumnsAmount}\r\n        onIncrease={props.functionsOfChange.increaseColumnsAmount}\r\n        value={props.gridConfig.amountOfColumn}\r\n        desc=\"columns\"\r\n        className=\"grid-config-panel__result-value\"\r\n      />\r\n      <ResultValue\r\n        onDecrease={props.functionsOfChange.decreaseColumnWidth}\r\n        onIncrease={props.functionsOfChange.increaseColumnWidth}\r\n        value={props.gridConfig.column}\r\n        desc=\"column, px\"\r\n        className=\"grid-config-panel__result-value\"\r\n      />\r\n      <ResultValue\r\n        onDecrease={props.functionsOfChange.decreaseGutter}\r\n        onIncrease={props.functionsOfChange.increaseGutter}\r\n        value={props.gridConfig.gutter}\r\n        desc=\"gutter, px\"\r\n        className=\"grid-config-panel__result-value\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport GridConfigPanel from \"./grid-config-panel\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  changeContainerWidth,\r\n  changeColumnAmount,\r\n  changeColumnWidth,\r\n  changeGutter,\r\n} from \"../store/reducers/gridConfigReducer\";\r\n\r\nexport default function GridConfigPanelContainer(props) {\r\n  const gridConfig = useSelector((state) => state.gridConfig);\r\n  const dispatch = useDispatch();\r\n\r\n  const functionsOfChange = {\r\n    decreaseContainer() {\r\n      dispatch(changeContainerWidth(-1));\r\n    },\r\n    increaseContainer() {\r\n      dispatch(changeContainerWidth(1));\r\n    },\r\n\r\n    decreaseColumnsAmount() {\r\n      dispatch(changeColumnAmount(-1));\r\n    },\r\n    increaseColumnsAmount() {\r\n      dispatch(changeColumnAmount(1));\r\n    },\r\n\r\n    decreaseColumnWidth() {\r\n      dispatch(changeColumnWidth(-1));\r\n    },\r\n    increaseColumnWidth() {\r\n      dispatch(changeColumnWidth(1));\r\n    },\r\n\r\n    decreaseGutter() {\r\n      dispatch(changeGutter(-1));\r\n    },\r\n    increaseGutter() {\r\n      dispatch(changeGutter(1));\r\n    },\r\n  };\r\n\r\n  return (\r\n    <GridConfigPanel\r\n      {...props}\r\n      gridConfig={gridConfig}\r\n      functionsOfChange={functionsOfChange}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Indicator from \"./common/indicator\";\r\nimport \"./dividers-block.css\";\r\n\r\nexport default function DividersBlock(props) {\r\n  return (\r\n    <div className={\"dividers-block \" + props.className}>\r\n      <div className=\"dividers-block__column dividers-block__group\">\r\n        <p className=\"text dividers-block__label\">\r\n          Columns width can be divided by:\r\n        </p>\r\n        <div className=\"dividers-block__indicators-panel\">\r\n          {props.values.columnDividers.map((d) => {\r\n            return (\r\n              <Indicator\r\n                className=\"dividers-block__indicator\"\r\n                key={d.divider}\r\n                divider={d.divider}\r\n                isActive={d.value}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"dividers-block__gutter dividers-block__group\">\r\n        <p className=\"text dividers-block__label\">\r\n          Gutters width can be divided by:\r\n        </p>\r\n        <div className=\"dividers-block__indicators-panel\">\r\n          {props.values.gutterDividers.map((d) => {\r\n            return (\r\n              <Indicator\r\n                className=\"dividers-block__indicator\"\r\n                key={d.divider}\r\n                divider={d.divider}\r\n                isActive={d.value}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport DividersBlock from \"./dividers-block\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function DividersBlockContainer(props) {\r\n  const gridConfig = useSelector((state) => state.gridConfig);\r\n\r\n  return <DividersBlock {...props} values={gridConfig} />;\r\n}\r\n","import React from \"react\";\r\nimport GridPreviewContainer from \"./grid-preview-container\";\r\nimport \"./result-block.css\";\r\nimport GridConfigPanelContainer from \"./grid-config-panel-container\";\r\nimport DividersBlockContainer from \"./dividers-block-container\";\r\n\r\nexport default function ResultBlock(props) {\r\n  return (\r\n    <div className={\"result-block \" + props.className}>\r\n      <GridPreviewContainer className=\"result-block__grid-preview\" />\r\n      <GridConfigPanelContainer className=\"result-block__grid-config-panel\" />\r\n      <DividersBlockContainer className=\"result-block__dividers-block\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./styles/functional.css\";\r\nimport \"normalize.css\";\r\nimport \"./styles/reset.css\";\r\nimport \"./styles/layout.css\";\r\nimport \"./styles/typography.css\";\r\nimport \"./App.css\";\r\n\r\nimport Header from \"./components/header\";\r\nimport FormContainer from \"./components/form-container\";\r\nimport ResultBlock from \"./components/result-block\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header className=\"app__header\" />\r\n      <div className=\"container app__container\">\r\n        <div className=\"app__form-section\">\r\n          <FormContainer className=\"app__form\" />\r\n          <div className=\"app__divider\" />\r\n        </div>\r\n        <ResultBlock className=\"app__result-block\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import formReducer from \"./reducers/formReducer\";\r\nimport gridConfigReducer from \"./reducers/gridConfigReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst { combineReducers, createStore, applyMiddleware } = require(\"redux\");\r\n\r\nlet reducers = combineReducers({\r\n  form: formReducer,\r\n  gridConfig: gridConfigReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}